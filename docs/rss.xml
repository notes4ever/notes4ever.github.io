<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>notes4ever</title><link>https://notes4ever.github.io</link><description>❤️ 睡沙发的人</description><copyright>notes4ever</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/186999790</url><title>avatar</title><link>https://notes4ever.github.io</link></image><lastBuildDate>Fri, 08 Nov 2024 16:20:47 +0000</lastBuildDate><managingEditor>notes4ever</managingEditor><ttl>60</ttl><webMaster>notes4ever</webMaster><item><title>miniconda安装</title><link>https://notes4ever.github.io/post/43.html</link><description>![image](https://github.com/user-attachments/assets/1ce7a9f2-1914-4235-8aaa-bd83f587a67e)&#13;
&#13;
miniconda官网：&#13;
&#13;
https://docs.anaconda.com/miniconda/&#13;
&#13;
参考教程：&#13;
&#13;
https://zhuanlan.zhihu.com/p/685496400&#13;
&#13;
主要命令：&#13;
&#13;
```&#13;
mkdir -p ~/miniconda3&#13;
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh&#13;
bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3&#13;
rm -rf ~/miniconda3/miniconda.sh&#13;
&#13;
~/miniconda3/bin/conda init bash&#13;
~/miniconda3/bin/conda init zsh&#13;
```&#13;
。</description><guid isPermaLink="true">https://notes4ever.github.io/post/43.html</guid><pubDate>Fri, 08 Nov 2024 16:16:23 +0000</pubDate></item><item><title>pip pipx安装与国内源设置</title><link>https://notes4ever.github.io/post/42.html</link><description>## pip设置清华源&#13;
&#13;
`pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple`&#13;
&#13;
linux与windows通用。</description><guid isPermaLink="true">https://notes4ever.github.io/post/42.html</guid><pubDate>Fri, 08 Nov 2024 16:06:38 +0000</pubDate></item><item><title>pip离线安装软件包</title><link>https://notes4ever.github.io/post/41.html</link><description>以apscheduler为例：&#13;
&#13;
pip download apscheduler -d /media/sf_share/apscheduler&#13;
&#13;
将 /media/sf_share/apscheduler目录打包，上传到需要离线安装的机器。</description><guid isPermaLink="true">https://notes4ever.github.io/post/41.html</guid><pubDate>Fri, 08 Nov 2024 16:04:11 +0000</pubDate></item><item><title>python3编译安装</title><link>https://notes4ever.github.io/post/40.html</link><description>```&#13;
sudo yum groupinstall 'Development Tools'&#13;
sudo yum install openssl-devel bzip2-devel zlib-devel readline-devel sqlite-devel xz-devel libffi-devel&#13;
```&#13;
&#13;
[官网](https://www.python.org/downloads/)下载python源码：&#13;
&#13;
python3124.tar.xz&#13;
&#13;
解压编译：&#13;
&#13;
&#13;
```&#13;
tar -xf python3124.tar.xz&#13;
cd python3124&#13;
./configure --prefix=/app/usr/python3&#13;
make &#13;
make install&#13;
```&#13;
&#13;
加入环境变量：&#13;
&#13;
`export PATH=/app/usr/python3/bin:$PATH`&#13;
&#13;
生效：&#13;
&#13;
`source ~/.bashrc `&#13;
&#13;
软链接python3和pip3：&#13;
&#13;
```&#13;
ln -s python3 python&#13;
ln -s pip3 pip&#13;
```。</description><guid isPermaLink="true">https://notes4ever.github.io/post/40.html</guid><pubDate>Fri, 08 Nov 2024 15:58:53 +0000</pubDate></item><item><title>Finder分栏设置默认宽度</title><link>https://notes4ever.github.io/post/39.html</link><description>苹果电脑 Mac OS X 系统中最重要的功能：Finder 有四种显示模式：图标、列表、分栏、Cover Flow，很多 Mac 用户使用第三种分栏模式。</description><guid isPermaLink="true">https://notes4ever.github.io/post/39.html</guid><pubDate>Fri, 08 Nov 2024 15:34:07 +0000</pubDate></item><item><title>mac删除顽固残留软件图标</title><link>https://notes4ever.github.io/post/38.html</link><description>![image](https://github.com/user-attachments/assets/72144948-1eb7-439a-bea3-dc67dd1d8ada)&#13;
&#13;
打开Terminal：&#13;
&#13;
`sqlite3 $(find /private/var/folders \( -name com.apple.dock.launchpad -a -user $USER \) 2&gt; /dev/null)/db/db 'DELETE FROM apps WHERE title='python';' &amp;&amp; killall Dock `&#13;
&#13;
title =''输入你实际要删除软件的名字，比如`python`。</description><guid isPermaLink="true">https://notes4ever.github.io/post/38.html</guid><pubDate>Fri, 08 Nov 2024 15:30:44 +0000</pubDate></item><item><title>docker安装与普通用户权限设置</title><link>https://notes4ever.github.io/post/37.html</link><description>步骤：&#13;
&#13;
1、添加docker源，linuxmint可以参考：&#13;
&#13;
https://www.zhihu.com/question/630722571&#13;
&#13;
2、安装&#13;
&#13;
sudo apt-get install docker-ce docker-ce-cli containerd.io&#13;
&#13;
3、配置普通用户运维权限&#13;
&#13;
```&#13;
$sudo usermod -aG docker $USER&#13;
$newgrp docker&#13;
```&#13;
&#13;
其它参考，可选：&#13;
&#13;
- https://zhuanlan.zhihu.com/p/651148141&#13;
- https://docs.docker.com/engine/security/rootless/ &#13;
- https://docs.docker.com/engine/install/linux-postinstall/。</description><guid isPermaLink="true">https://notes4ever.github.io/post/37.html</guid><pubDate>Fri, 08 Nov 2024 15:17:24 +0000</pubDate></item><item><title>CF搭建dockerhub代理</title><link>https://notes4ever.github.io/post/36.html</link><description>&gt; **cloudflare反向代理之dockerhub代理配置。</description><guid isPermaLink="true">https://notes4ever.github.io/post/36.html</guid><pubDate>Fri, 08 Nov 2024 14:32:32 +0000</pubDate></item><item><title>virtualbox虚拟机常用配置</title><link>https://notes4ever.github.io/post/35.html</link><description>&gt; **virtualbox重点配置记录**&#13;
&#13;
## virtualbox修改vdi的uuid&#13;
复制虚拟机的时候，一般是复制vdi，然后修改vdi，才能启动为新的虚拟机。</description><guid isPermaLink="true">https://notes4ever.github.io/post/35.html</guid><pubDate>Fri, 08 Nov 2024 14:27:52 +0000</pubDate></item><item><title>linuxmint安装中文输入法</title><link>https://notes4ever.github.io/post/34.html</link><description>`&#13;
sudo apt-get install fcitx fcitx-bin fcitx-pinyin  fcitx-googlepinyin&#13;
`&#13;
&#13;
重启虚拟机 或者 注销重新登录。</description><guid isPermaLink="true">https://notes4ever.github.io/post/34.html</guid><pubDate>Fri, 08 Nov 2024 14:06:33 +0000</pubDate></item><item><title>centos9设置国内源与epel</title><link>https://notes4ever.github.io/post/33.html</link><description>![image](https://github.com/user-attachments/assets/1f7b7926-381d-4998-a57c-cb042b35d33b)&#13;
&#13;
&gt; **centos 9 国内源设置**&#13;
&#13;
## centos9设置中科大源&#13;
&#13;
yum源目录：/etc/yum.repos.d&#13;
目录下所有的*.repo文件都移动到bak，用不到暂时备份。</description><guid isPermaLink="true">https://notes4ever.github.io/post/33.html</guid><pubDate>Fri, 08 Nov 2024 13:59:27 +0000</pubDate></item><item><title>常用命令之systemctl</title><link>https://notes4ever.github.io/post/32.html</link><description>&gt; **systemctl是很常用的命令，以sshd服务进程为例记录**&#13;
&#13;
## 查看ssh是否安装，以及安装方法&#13;
查看ssh是否安装：rpm -qa | grep ssh&#13;
如有显示类似下面这些就说明安装了&#13;
libssh2-1.4.3-10.el7.x86_64&#13;
openssh-server-6.6.1p1-22.el7.x86_64&#13;
openssh-clients-6.6.1p1-22.el7.x86_64&#13;
openssh-6.6.1p1-22.el7.x86_64&#13;
安装命令：&#13;
sudo yum install openssh-server&#13;
&#13;
## 查看ssh服务状态&#13;
两种方法：&#13;
&#13;
1、/etc/init.d/sshd status&#13;
2、systemctl status sshd.service&#13;
&#13;
## 启停命令&#13;
1、开启SSH服务&#13;
service sshd start&#13;
2、停止SSH服务&#13;
service sshd stop&#13;
3、重启SSH服务&#13;
service sshd restart&#13;
4、验证服务是否启动成功&#13;
netstat -antp | grep sshd&#13;
&#13;
## 开机自启配置&#13;
1、检查SSH是否在本运行级别下设置为开机启动&#13;
chkconfig --list sshd&#13;
执行结果 sshd               0:off    1:off    2:on    3:on    4:on    5:on    6:off&#13;
&#13;
2、如果没有设置可通过下面命令设置运行级别&#13;
chkconfig --level 2345 sshd on&#13;
指定运行级别为2,3,4,5&#13;
等级0表示：表示关机&#13;
等级1表示：单用户模式&#13;
等级2表示：无网络连接的多用户命令行模式&#13;
等级3表示：有网络连接的多用户命令行模式&#13;
等级4表示：不可用&#13;
等级5表示：带图形界面的多用户模式&#13;
等级6表示：重新启动&#13;
&#13;
3、设置开机启动信息&#13;
chkconfig sshd on&#13;
也可以通过以下命令设置&#13;
systemctl enable sshd&#13;
&#13;
## 查看服务器所有设置开机启动的服务&#13;
systemctl list-unit-files --state=enabled。</description><guid isPermaLink="true">https://notes4ever.github.io/post/32.html</guid><pubDate>Fri, 08 Nov 2024 13:49:12 +0000</pubDate></item><item><title>journalctl dmesg strace</title><link>https://notes4ever.github.io/post/31.html</link><description>&gt; **linux下常用的日志排查与进程追踪命令有journalctl dmesg strace等**&#13;
&#13;
## journalctl&#13;
journalctl 命令来自英文词组 journal control 的缩写，其功能是查看指定的日志信息。</description><guid isPermaLink="true">https://notes4ever.github.io/post/31.html</guid><pubDate>Fri, 08 Nov 2024 13:02:54 +0000</pubDate></item><item><title>CF workers pages反向代理</title><link>https://notes4ever.github.io/post/30.html</link><description>&gt; **cloudflare提供了workers和pages，可以用来做反向代理，而且提供了个人够用的免费套餐。</description><guid isPermaLink="true">https://notes4ever.github.io/post/30.html</guid><pubDate>Fri, 08 Nov 2024 12:38:59 +0000</pubDate></item><item><title>浏览器开启DoH和ECH</title><link>https://notes4ever.github.io/post/29.html</link><description>&gt;**DoH和ECH尽量开启，可以保障一些隐私，尤其是请求的服务端支持ECH的时候。</description><guid isPermaLink="true">https://notes4ever.github.io/post/29.html</guid><pubDate>Thu, 07 Nov 2024 05:02:54 +0000</pubDate></item><item><title>GFW进阶技术</title><link>https://notes4ever.github.io/post/28.html</link><description>&gt; **除了基本的IP阻断、DNS污染和SNI阻断手段，GFW还采用了更为高阶的技术手段，并且会持续进化。</description><guid isPermaLink="true">https://notes4ever.github.io/post/28.html</guid><pubDate>Thu, 07 Nov 2024 01:36:10 +0000</pubDate></item><item><title>IP阻断 DNS污染与DoH</title><link>https://notes4ever.github.io/post/27.html</link><description>&gt; **GFW工作的时候，除了SNI阻断之外，常用基本手段还有IP阻断和DNS污染。</description><guid isPermaLink="true">https://notes4ever.github.io/post/27.html</guid><pubDate>Wed, 06 Nov 2024 14:52:02 +0000</pubDate></item><item><title>SNI阻断之域前置技术与反向代理</title><link>https://notes4ever.github.io/post/26.html</link><description>![image](https://github.com/user-attachments/assets/da31a224-f048-44c6-9ff9-1ea17ddaad55)&#13;
&#13;
&gt; **GFW工作的时候，识别SNI然后阻断是常用手段之一，域前置技术与反向代理可以绕过SNI阻断。</description><guid isPermaLink="true">https://notes4ever.github.io/post/26.html</guid><pubDate>Wed, 06 Nov 2024 13:43:15 +0000</pubDate></item><item><title>Terminal使用系统代理</title><link>https://notes4ever.github.io/post/25.html</link><description>&gt; **除了浏览器使用系统代理，Terminal里面执行命令也可以使用，解决像brew和git等网络代理问题。</description><guid isPermaLink="true">https://notes4ever.github.io/post/25.html</guid><pubDate>Wed, 06 Nov 2024 11:55:34 +0000</pubDate></item><item><title>常用工具之tcping和httping</title><link>https://notes4ever.github.io/post/24.html</link><description>&gt; **类比ping之基于icmp，用于探测网络层的延迟；tcping基于tcp，用于探测tcp三次握手；httping基于http/https用于测试真实的http/https数据返回延迟。</description><guid isPermaLink="true">https://notes4ever.github.io/post/24.html</guid><pubDate>Wed, 06 Nov 2024 09:43:31 +0000</pubDate></item><item><title>常用命令之df与du</title><link>https://notes4ever.github.io/post/23.html</link><description>&gt; **人们经常会把df和du命令混淆，df是用于查看磁盘或分区使用情况的命令，而du命令则是用于按照指定容量单位来查看文件或目录在磁盘中的占用情况。</description><guid isPermaLink="true">https://notes4ever.github.io/post/23.html</guid><pubDate>Wed, 06 Nov 2024 08:30:47 +0000</pubDate></item><item><title>常用命令之tee</title><link>https://notes4ever.github.io/post/22.html</link><description>&gt; **tee命令：读取标准输入内容（包括缓冲区比如vim编辑刷新内容），将读取到的数据写到标准输出和文件。</description><guid isPermaLink="true">https://notes4ever.github.io/post/22.html</guid><pubDate>Wed, 06 Nov 2024 06:46:58 +0000</pubDate></item><item><title>常用命令之top</title><link>https://notes4ever.github.io/post/21.html</link><description>![image](https://github.com/user-attachments/assets/d16f8864-8a3e-481f-aeb0-b2ab52759b18)&#13;
&#13;
&gt; **与 ps 命令相似，top 命令也可以显示进程信息，但采用的是实时方式。</description><guid isPermaLink="true">https://notes4ever.github.io/post/21.html</guid><pubDate>Wed, 06 Nov 2024 06:33:36 +0000</pubDate></item><item><title>su - sudo su - sudo -i 的区别</title><link>https://notes4ever.github.io/post/20.html</link><description>&gt; **关于su和sudo的命令很容易记错用错，在此总结。</description><guid isPermaLink="true">https://notes4ever.github.io/post/20.html</guid><pubDate>Wed, 06 Nov 2024 06:22:53 +0000</pubDate></item><item><title>利用dd命令创建空洞文件</title><link>https://notes4ever.github.io/post/19.html</link><description>&#13;
![image](https://github.com/user-attachments/assets/d9042e24-b949-47db-b4bc-1fd2ba84a77b)&#13;
&#13;
&gt; **利用dd命令创建文件，以及ls和du查看文件大小的区别。</description><guid isPermaLink="true">https://notes4ever.github.io/post/19.html</guid><pubDate>Wed, 06 Nov 2024 06:15:14 +0000</pubDate></item><item><title>安装java openjdk</title><link>https://notes4ever.github.io/post/18.html</link><description>&gt; **java环境 jdk的安装，以linuxmint和centos为示例。</description><guid isPermaLink="true">https://notes4ever.github.io/post/18.html</guid><pubDate>Wed, 06 Nov 2024 05:59:24 +0000</pubDate></item><item><title>sudo免输入账号密码</title><link>https://notes4ever.github.io/post/17.html</link><description>&gt; **sudo 执行命令的时候配置免输入密码，此方式并不推荐，只适合懒人和并不知道某用户密码的场景。</description><guid isPermaLink="true">https://notes4ever.github.io/post/17.html</guid><pubDate>Wed, 06 Nov 2024 05:42:32 +0000</pubDate></item><item><title>linuxmint禁止升级内核</title><link>https://notes4ever.github.io/post/16.html</link><description>&#13;
![image](https://github.com/user-attachments/assets/f820c107-3c66-482b-8e72-0261dddf1bf7)&#13;
&#13;
&gt; **upgrade的时候禁止升级内核版本，以linuxmint为示例。</description><guid isPermaLink="true">https://notes4ever.github.io/post/16.html</guid><pubDate>Wed, 06 Nov 2024 05:36:22 +0000</pubDate></item><item><title>node npm cnpm pnpm</title><link>https://notes4ever.github.io/post/15.html</link><description>&gt; **关于node与npm的配置，以linuxmint为示例**&#13;
&#13;
```&#13;
sudo apt update&#13;
sudo apt install -y nodejs&#13;
sudo apt install -y npm&#13;
```&#13;
&#13;
之前nodejs安装完成后npm就自带了，现在比较新的发行版貌似是要单独安装npm才行。</description><guid isPermaLink="true">https://notes4ever.github.io/post/15.html</guid><pubDate>Wed, 06 Nov 2024 05:25:05 +0000</pubDate></item><item><title>home目录下中英文名字切换</title><link>https://notes4ever.github.io/post/14.html</link><description>&gt; **linuxmint下一种中英文目录名切换的方式**&#13;
&#13;
打开终端，在终端下输入命令：&#13;
```&#13;
sudo apt-get install xdg-user-dirs-gtk &#13;
export LANG=en_US &#13;
xdg-user-dirs-gtk-update&#13;
export LANG=zh_CN.UTF-8&#13;
```&#13;
&#13;
更改export LANG实现切换，可能需要注销重启生效。</description><guid isPermaLink="true">https://notes4ever.github.io/post/14.html</guid><pubDate>Wed, 06 Nov 2024 05:17:42 +0000</pubDate></item><item><title>centos yum epel-release</title><link>https://notes4ever.github.io/post/13.html</link><description>&gt; **关于centos epel** &#13;
&#13;
&#13;
```&#13;
sudo yum -y install epel-release&#13;
sudo yum clean all #清除本地缓存&#13;
sudo yum makecache #把源缓存到本地&#13;
```&#13;
&#13;
EPEL 代表 Extra Packages for Enterprise Linux，由 Fedora Special Interest Group 创建和维护。</description><guid isPermaLink="true">https://notes4ever.github.io/post/13.html</guid><pubDate>Wed, 06 Nov 2024 02:59:07 +0000</pubDate></item><item><title>linuxmint删除缓存</title><link>https://notes4ever.github.io/post/12.html</link><description>![image](https://github.com/user-attachments/assets/1f8c7027-8536-4d59-8368-7b5e9cc70724)&#13;
&#13;
&gt; **关于linuxmint缓存的删除，包括apt缓存等**&#13;
&#13;
## apt缓存路径&#13;
查看大小：&#13;
&#13;
`sudo du -sh /var/cache/apt/archives`&#13;
&#13;
删除：&#13;
&#13;
`sudo apt clean`&#13;
&#13;
重新查看就变小了。</description><guid isPermaLink="true">https://notes4ever.github.io/post/12.html</guid><pubDate>Wed, 06 Nov 2024 02:50:26 +0000</pubDate></item><item><title>常用命令之rm</title><link>https://notes4ever.github.io/post/11.html</link><description>![image](https://github.com/user-attachments/assets/12192754-59a2-4a1e-bbb2-6a34ce4fbc83)&#13;
&#13;
&gt; **删除命令相关，rm权力太大，要限制，尤其是root和sudo执行rm。</description><guid isPermaLink="true">https://notes4ever.github.io/post/11.html</guid><pubDate>Wed, 06 Nov 2024 02:36:41 +0000</pubDate></item><item><title>AI搜索引擎中文简单评测</title><link>https://notes4ever.github.io/post/10.html</link><description>![image](https://github.com/user-attachments/assets/36ea604f-83a5-449c-9658-a695612ebee2)&#13;
&#13;
&gt; **AI大幕开启，群雄逐鹿，选用比较好用的中文搜索工具是必要的。</description><guid isPermaLink="true">https://notes4ever.github.io/post/10.html</guid><pubDate>Tue, 05 Nov 2024 15:06:46 +0000</pubDate></item><item><title>youtube视频下载</title><link>https://notes4ever.github.io/post/9.html</link><description>![image](https://github.com/user-attachments/assets/27d3a775-6f36-426d-8d17-5e02c13cb05a)&#13;
&#13;
&gt; 油管视频下载工具&#13;
&#13;
## 命令行工具&#13;
[yt-dlp](https://github.com/yt-dlp/yt-dlp)，一款非常受欢迎的youtube视频下载工具，目前87K个star。</description><guid isPermaLink="true">https://notes4ever.github.io/post/9.html</guid><pubDate>Tue, 05 Nov 2024 08:00:05 +0000</pubDate></item><item><title>暂时关闭quic协议</title><link>https://notes4ever.github.io/post/8.html</link><description>![image](https://github.com/user-attachments/assets/ab7c0d58-4d6d-476b-96b7-84fc7ea55cf8)&#13;
&#13;
&gt; **quic是http/3的基石，也是趋势和未来**&#13;
&#13;
虽然quic是更先进的传输层协议，但实际使用中可能会碰到问题，尤其是在大陆。</description><guid isPermaLink="true">https://notes4ever.github.io/post/8.html</guid><pubDate>Tue, 05 Nov 2024 06:38:44 +0000</pubDate></item><item><title>常用浏览器之librewolf</title><link>https://notes4ever.github.io/post/7.html</link><description>![image](https://github.com/user-attachments/assets/b7792b03-c8a2-4757-a877-1aeaad551d87)&#13;
&#13;
&gt; **值得向所有人推荐的浏览器**&#13;
&#13;
## Firefox家族浏览器&#13;
基于Mozilla开源内核的浏览器很多，其中有不少优秀的代表，隐私与安全方面有Tor和Mullvad，性能与交互都很优秀的Zen，如果注重隐私与安全，又不牺牲太多便捷性，同时又简洁可靠不花哨，那[lirewolf](https://librewolf.net/)应该是不二之选。</description><guid isPermaLink="true">https://notes4ever.github.io/post/7.html</guid><pubDate>Tue, 05 Nov 2024 01:58:47 +0000</pubDate></item><item><title>常用命令之nohup</title><link>https://notes4ever.github.io/post/6.html</link><description>![image](https://github.com/user-attachments/assets/a62559a6-bbe9-47c5-82fa-e81dbd417b41)&#13;
&#13;
&gt; **后台运行命令，以及恢复命令的前台执行**&#13;
&#13;
*nix系统下有很多关于后台、挂起、前台恢复的命令；在此列举一些常用的，尤其是最强大的nohup。</description><guid isPermaLink="true">https://notes4ever.github.io/post/6.html</guid><pubDate>Mon, 04 Nov 2024 08:54:20 +0000</pubDate></item><item><title>Terminal常用快捷键</title><link>https://notes4ever.github.io/post/5.html</link><description>![cli-commands](https://github.com/user-attachments/assets/92509d21-fce3-4e1b-8359-d94719aef1e6)&#13;
&#13;
&gt; **到处都是快捷键，太多了，记录Terminal最常用的快捷键**&#13;
&#13;
## 移动光标到行首&#13;
Ctrl-a &#13;
&#13;
## 移动光标到行尾&#13;
Ctrl-e &#13;
&#13;
## 清屏&#13;
Ctrl-l  == clear命令&#13;
&#13;
## 在单词之间跳转&#13;
Ctrl+左右键&#13;
&#13;
## 删除当前光标前面所有的字符&#13;
Ctrl+u&#13;
&#13;
更确切地说法是剪切&#13;
&#13;
## 删除当前光标后面所有的字符&#13;
Ctrl+k&#13;
&#13;
也是剪切&#13;
&#13;
## 粘贴Ctrl+u或Ctrl+k剪切的内容&#13;
Ctrl + y&#13;
&#13;
。</description><guid isPermaLink="true">https://notes4ever.github.io/post/5.html</guid><pubDate>Mon, 04 Nov 2024 08:13:01 +0000</pubDate></item><item><title>常用命令之less</title><link>https://notes4ever.github.io/post/4.html</link><description>&#13;
![image](https://github.com/user-attachments/assets/899255d7-0cd2-4324-b41e-46cd09322012)&#13;
&#13;
&#13;
&gt; **lesss is more than more**&#13;
&#13;
## less命令&#13;
less是more命令的升级版本；文本文件的读取一般使用less，尤其较大文件。</description><guid isPermaLink="true">https://notes4ever.github.io/post/4.html</guid><pubDate>Mon, 04 Nov 2024 07:11:19 +0000</pubDate></item><item><title>常用命令之ps</title><link>https://notes4ever.github.io/post/3.html</link><description>![image](https://github.com/user-attachments/assets/43b47427-f7ce-4248-af0a-79d02094ea4d)&#13;
&#13;
&gt; **ps命令与netstat类似，参数比较多，需要记住一些重要的，常用的**&#13;
&#13;
## ps实践最常用法&#13;
### 查看所有进程&#13;
**ps -ef  和 ps -efl**（小写的l）&#13;
&#13;
### 查看所有进程及其线程&#13;
**ps -efL** （大写的L）&#13;
&#13;
### 查看某用户下的进程及其线程&#13;
**ps -u username -Lf**&#13;
&#13;
### 查看特定进程的线程，结果包含进程本身&#13;
假设进程ID为1234：&#13;
**ps -mp 1234 -Lf**&#13;
&#13;
### 查看特定进程的线程，结果不包含进程本身&#13;
假设进程ID为1234：&#13;
**ps  -p 1234 -Lf**&#13;
&#13;
## 部分命令参数与输出结果解释&#13;
ps 命令堪比工具中的瑞士军刀，能够输出系统中运行的所有程序（进程）的大量信息。</description><guid isPermaLink="true">https://notes4ever.github.io/post/3.html</guid><pubDate>Mon, 04 Nov 2024 06:25:21 +0000</pubDate></item><item><title>tshark使用笔记</title><link>https://notes4ever.github.io/post/2.html</link><description>![image](https://github.com/user-attachments/assets/e3ea6ef6-3bc8-4877-8e0a-704e7a87104e)&#13;
&#13;
&gt; **记录tshark常用命令**&#13;
&#13;
## 查看tshark版本&#13;
tshark -v&#13;
&#13;
## 查看网络接口&#13;
tshark -D&#13;
&#13;
实际使用，只需要网络接口对应的序号即可。</description><guid isPermaLink="true">https://notes4ever.github.io/post/2.html</guid><pubDate>Sun, 03 Nov 2024 14:40:38 +0000</pubDate></item><item><title>Alacritty Terminal</title><link>https://notes4ever.github.io/post/1.html</link><description>![image](https://github.com/user-attachments/assets/2d792155-617e-4c79-9cef-298d8b91714e)&#13;
&#13;
&gt; **简洁，快速，稳定的Terminal**&#13;
&#13;
## 忆往昔&#13;
&#13;
记得多年前，第一次使用Linux（Ubuntu），打开终端，仿佛打开了一个新的世界。</description><guid isPermaLink="true">https://notes4ever.github.io/post/1.html</guid><pubDate>Sun, 03 Nov 2024 06:37:12 +0000</pubDate></item></channel></rss>